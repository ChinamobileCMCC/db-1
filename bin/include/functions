#!/usr/bin/env sh

user_input()
{
  prompt=$1
  error_msg=$2
  default=$3
  allow_empty=$4

  while true; do
    read -p "${prompt} [${default}]: " answer

    if [ -z "${answer}" ]; then
      # if answer is empty...

      if [ ! -z "${default}" ]; then
        # if a default value has been provided
        answer=${default}
        break
      fi

      if [ "${allow_empty}" = 1 ]; then
        # if we allow empty answers
        break
      fi

      echo "${error_msg}"
    else
      # answer is not empty
      break
    fi

  done
}

find_snapshot()
{
  snapshot=$1
  file="${dumps}/${snapshot}.gz"

  if [ ! -f "${file}" ]; then
    if [ $(find "${dumps}" | grep "${snapshot}" | wc -l | sed -e 's/^[[:space:]]*//') -eq 1 ]; then
      file=$(find "${dumps}" | grep "${snapshot}")
    else
      echo "${COLOR_LIGHT_BLUE}Provided snapshot name is not unique or does not exist. Aborting.${COLOR_NC}"
      exit 1
    fi
  fi
}

find_snapshot_from_any_server()
{
  snapshot=$1
  file="${dumps}/${snapshot}.gz"

  if [ ! -z "${snapshot}" ]; then
    if [ ! -f "${file}" ]; then
      if [ $(find "${repository}/" | grep -c "dumps/${snapshot}") -eq 1 ]; then
        file=$(find "${repository}" | grep "dumps/${snapshot}")
      else
        echo "${COLOR_LIGHT_BLUE}Provided snapshot, \"${snapshot}\", is not unique or does not exist. Aborting.${COLOR_NC}"
        exit 1
      fi
    fi
  fi
}

boot()
{
  if [ ! -d "${meta}" ]; then
    mkdir "${meta}"
  fi
}